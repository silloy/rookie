<?xml version="1.0" encoding="UTF-8" ?>
<configuration>
    <!--引入默认的一些设置-->
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

    <springProperty scope="context" name="applicationName" source="spring.application.name"
                    defaultValue="application"/>


    <conversionRule conversionWord="logSort" converterClass="log.DispatcherLogSort"/>

    <property name="defaultPattern"
              value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} ##${applicationName}##%ip##%X{req.requestURI:--}##%M##%m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>
    <!--写入日志到控制台的appender,用默认的,但是要去掉charset,否则windows下tomcat下乱码-->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <charset>UTF-8</charset>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <!--<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%-10.10thread] %-5level |%-40.40logger{39} | - %msg%n</pattern>-->
            <!--<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %logSort - ##${applicationName}%msg%n</pattern>-->
        </encoder>
    </appender>

    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <property name="LOG_PATH" value="/data/apps/logs/${applicationName}"/>
    <!--写入日志到文件的appender-->

    <appender name="allLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_PATH}/${applicationName}.all.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名,每天一个文件-->
            <fileNamePattern>${LOG_PATH}/history/%d{yyyyMM,aux}/${applicationName}.all.log.%d{yyyyMMdd}
            </fileNamePattern>
            <!--日志文件保留天数-->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>-->
            <charset>UTF-8</charset>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{15} [%M:%L] %X{traceId} %X{orderId} %logSort
                - %msg%n
            </pattern>
        </encoder>
    </appender>


    <!-- error appender -->
    <appender name="errorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <File>${LOG_PATH}/${applicationName}.error.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_PATH}/history/%d{yyyyMM,aux}/${applicationName}.error.log.%d{yyyyMMdd}
            </FileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{15} [%M:%L] %X{traceId} %X{orderId} %logSort
                - %msg%n
            </pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- sql appender -->
    <appender name="sqlLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_PATH}/${applicationName}.sql.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${LOG_PATH}/history/%d{yyyyMM,aux}/${applicationName}.sql.log.%d{yyyyMMdd}
            </fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{15} [%M:%L] %X{traceId} %X{orderId} %logSort
                - %msg%n
            </pattern>
        </encoder>
    </appender>

    <!-- perf4j -->
    <appender name="perf4jFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_PATH}/${applicationName}.perf4j.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_PATH}/history/%d{yyyyMM,aux}/perf4j.log.%d{yyyyMMdd}</FileNamePattern>
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder>
            <Pattern>%msg%n</Pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>

    <appender name="CoalescingStatistics" class="org.perf4j.logback.AsyncCoalescingStatisticsAppender">
        <param name="TimeSlice" value="60000"/>
        <appender-ref ref="perf4jFile"/>
    </appender>

    <logger name="org.perf4j.TimingLogger" level="debug" additivity="false">
        <appender-ref ref="CoalescingStatistics"/>
    </logger>

    <!--异步输出日志-->
    <!-- 异步输出 -->
    <appender name="errorLogFile" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>2048</queueSize>
        <IncludeCallerData>true</IncludeCallerData>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="errorLog"/>
    </appender>

    <appender name="allLogFile" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>2048</queueSize>
        <IncludeCallerData>true</IncludeCallerData>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="allLog"/>
    </appender>


    <appender name="sqlLogFile" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>2048</queueSize>
        <IncludeCallerData>true</IncludeCallerData>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="sqlLog"/>
    </appender>


    <!--开发环境:打印控制台-->
    <springProfile name="local">
        <logger name="com.zj.web.mapper" level="DEBUG"/>
        <root level="info">
            <appender-ref ref="CONSOLE"/>
        </root>
    </springProfile>


    <logger name="com.zj.web.mapper" additivity="false">
        <level value="DEBUG"/>
        <appender-ref ref="sqlLogFile"/>
    </logger>
    <root level="INFO">
        <appender-ref ref="errorLogFile"/>
        <appender-ref ref="allLogFile"/>
        <appender-ref ref="CONSOLE"/>
    </root>


    <!--

    #模式符号 - 用途(附加说明);{可选附加选项}(附加选项说明)
    #  %c     - 日志名称(通常是构造函数的参数);{数字}("a.b.c" 的名称使用 %c{2} 会输出 "b.c")
    #  %C     - 调用者的类名(速度慢,不推荐使用);{数字}(同上)
    #  %d     - 日志时间;{SimpleDateFormat所能使用的格式}
    #  %F     - 调用者的文档名(速度极慢,不推荐使用)
    #  %l     - 调用者的函数名、文档名、行号(速度极其极其慢,不推荐使用)
    #  %L     - 调用者的行号(速度极慢,不推荐使用)
    #  %m     - 日志
    #  %M     - 调用者的函数名(速度极慢,不推荐使用)
    #  %n     - 换行符号
    #  %p     - 日志优先级别(DEBUG, INFO, WARN, ERROR)
    #  %r     - 输出日志所用毫秒数
    #  %t     - 调用者的进程名
    #  %x     - Used to output the NDC (nested diagnostic context) associated with the thread that generated the logging event.
    #  %X     - Used to output the MDC (mapped diagnostic context) associated with the thread that generated the logging event.
    #
    #模式修饰符 - 对齐 - 最小长度 - 最大长度 - 说明
    # %20c        右      20         ~
    # %-20c      左       20         ~
    # %.30c       ~       ~          30
    # %20.30c     右      20         30
    # %-20.30c   左       20         30

    -->

</configuration>
